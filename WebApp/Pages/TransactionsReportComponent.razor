@page "/transaction"
@attribute [Authorize(Policy = "AdminOnly")]
@inject IGetTransactionUseCase transaction
@inject IGetProductByIdUseCase _product
@inject IJSRuntime jsRuntime
<div id="printarea">
    <div class="row">
        <div class="col-2">
            <label for="cashier">Cashier Name</label>
            <input type="text" id="cashier" @bind-value="cashierName" class="form-control" />
        </div>
        <div class="col-3">
            <label for="startdate">Start Date</label>
            <input type="date" id="startdate" @bind-value="startDate" class="form-control" />
        </div>
        <div class="col-3">
            <label for="enddate">End Date</label>
            <input type="date" id="enddate" @bind-value="endDate" class="form-control" />
        </div>
        <div class="col-2">
            <button type="button" class="btn btn-primary mt-4 form-control" @onclick="LoadTransaction">Search</button>
        </div>
        <div class="col-2">
            <button type="button" class="btn btn-primary mt-4 form-control" @onclick="PrintReport">Print</button>
        </div>
    </div>

    <br />
    @if (_transactions != null)
    {

        <table class="table">
            <thead>
                <tr>
                    <th>Date time</th>
                    <th>Cashier Name</th>
                    <th>Product Name</th>
                    <th>Qty Before</th>
                    <th>Qty Sold</th>
                    <th>Qty After</th>
                    <th>Price</th>
                    <th>Sold Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in _transactions)
                {
                    <tr>
                        <td>@transaction.TimeStamp.ToString("dd-MM-yyyy hh:mm")</td>
                        <td>@transaction.CashierName</td>
                        <td>@_product.Execute(transaction.ProductId).Name</td>
                        <td>@transaction.BeforeQty</td>
                        <td>@transaction.SoldQty</td>
                        <td>@(transaction.BeforeQty - transaction.SoldQty)</td>
                        <td style="text-align:right">@(string.Format("{0:c}", transaction.Price))</td>
                        <td style="text-align:right">@(string.Format("{0:c}", transaction.SoldQty * transaction.Price))</td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="6">&nbsp;</td>
                    <td>Grand Total:</td>
                    <td style="text-align:right"><b>@(string.Format("{0:c}", _transactions.Sum(x => x.Price * x.SoldQty)))</b></td>
                </tr>
            </tfoot>
        </table>
    }
</div>
@code {
    private string cashierName;
    private DateTime startDate = DateTime.Today;
    private DateTime endDate = DateTime.Today;
    private IEnumerable<Transaction> _transactions;
    protected override void OnInitialized()
    {
        base.OnInitialized();
        _transactions = transaction.Execute(cashierName, startDate, endDate);
    }
    private void LoadTransaction()
    {
        _transactions = transaction.Execute(cashierName, startDate, endDate);
    }
    private void PrintReport()
    {
        jsRuntime.InvokeVoidAsync("print");
    }
}
