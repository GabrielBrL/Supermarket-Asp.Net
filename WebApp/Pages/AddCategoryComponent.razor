@page "/addcategory"
@attribute [Authorize(Policy = "AdminOnly")]
@inject NavigationManager navManager
@inject IAddCategoryUseCase addCategory
<h3>Add Category</h3>

@if (_category != null)
{
    <EditForm Model="_category" class="form-inline" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="_category.Name" autocomplete="off" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label for="description">Description</label>
            <InputText id="description" @bind-Value="_category.Description" class="form-control"></InputText>
        </div>

        <button type="submit" class="btn btn-primary mt-5">Save</button>
        <button type="button" class="btn btn-danger mt-5" @onclick="OnCancel">Cancel</button>
    </EditForm>
}

@code {
    private Category _category;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _category = new Category();
    }
    private void OnValidSubmit()
    {
        addCategory.Execute(_category);
        navManager.NavigateTo("/categories");
    }
    private void OnCancel()
    {
        navManager.NavigateTo("/categories");
    }
}
